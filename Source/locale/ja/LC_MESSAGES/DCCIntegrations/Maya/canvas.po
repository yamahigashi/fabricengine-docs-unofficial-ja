#
msgid ""
msgstr ""
"Project-Id-Version: Fabric Engine 2.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-01-23 12:42+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/DCCIntegrations/Maya/canvas.rst:4
msgid "Canvas inside of Maya"
msgstr "Maya内部のCanvas"

#: ../../source/DCCIntegrations/Maya/canvas.rst:9
msgid "Canvas Node Types"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:11
msgid "Fabric for Maya comes with two node types:"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:13
msgid ""
"The CanvasNode is a generic MPxNode where you can attach almost every "
"kind of maya attribute type, it is suited for any generic computation "
"such as rigging or simulation solvers."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:15
msgid ""
"The CanvasDeformer is a deformer node that seamlessly works with Maya's "
"deformation tools and commands and works with a PolygonMesh Array, "
"allowing to modify the positions of a mesh without changing its topology."
" It is faster than CanvasNode for deformations since it avoids creating a"
" new full mesh."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:18
msgid "CanvasNode"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:20
msgid ""
"This is the main Canvas node and the one you will typically be using in "
"your scenes."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:22
#, fuzzy
msgid ""
"You can instantiate the canvasNode in the node editor hitting :dfn:`TAB` "
"and typing :dfn:`canvas` or through the Fabric top level menu and "
"choosing :dfn:`Create graph (Node)`. You can then open up the Canvas "
"graph through the :dfn:`Open Canvas` button on the Maya Attribute editor."
msgstr ""
"CanvasはMayaのハイパーグラフノードのように、Maya内部に統合されています。あなたはノードエディターで、 :dfn:`TAB` "
"キーを押して、 :dfn:`canvas` とタイプするか、Fabricトップレベルメニューから :dfn:`Create graph` "
"を選ぶことで、CanvasNodeを作成することができます。さらに、Mayaのアトリビュートエディターの :dfn:`Open Canvas` "
"ボタンを押すことで、Canvasユーザーインターフェース開くことができます。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:27
msgid "CanvasDeformer"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:29
msgid ""
"This node is a variant of the Canvas node and it is specialized / "
"optimized for deformations, taking advantage of Maya's deformation "
"features. The benefit of using this node for deformations rather than the"
" 'regular' Canvas node is a gain in speed of around 3x - 5x."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:31
msgid ""
"The gain in speed comes at a price: the node is not as flexible as the "
"'regular' Canvas node and, more importantly, one must respect a certain "
"way of building the Canvas graph. See following section for more detailed"
" information."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:33
msgid ""
"You can instantiate the canvasDeformer in the node editor hitting "
":dfn:`TAB` and typing :dfn:`canvasDeformer` or through the Fabric top "
"level menu and choosing :dfn:`Create graph (Deformer)` with an object "
"selection. You can then open up the Canvas graph through the :dfn:`Open "
"Canvas` button on the Maya Attribute editor."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:35
msgid ""
"When opening the Canvas graph you will notice there is a default an IO "
"port called **meshes**."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:37
msgid ""
"This port must not be removed nor renamed or else the deformer node will "
"not work properly!."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:39
msgid ""
"The correct and safe way to apply a deformation consists of getting the "
"array of vertex positions of a PolygonMesh element from the meshes "
"PolygonMesh array (using Array.Get and GetAllPointPositions), modify the "
"values of the array and finally setting the vertex positions on the "
"output PolygonMesh to the meshes array with Array.Set."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:41
msgid "The following image shows the correct way to do it."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:45
msgid ""
"**A (get)** get the mesh from the array meshes and its point positions as"
" an array of Vec3."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:47
msgid ""
"**B (do the magic)** perform the actual deformation by modifying the "
"values of the Vec3 array. You can do whatever you want with the array "
"just as long as you do *not modify its size, ie. the amount of elements "
"in the array should not be changed*."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:49
msgid ""
"**C (set)** set the new vertex positions on the mesh and put the changes "
"back into the array meshes."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:51
msgid ""
"when building a *simulated* deformer, for example a foot step deformer, "
"one must keep in mind that the :dfn:`canvasDeformer` resets the meshes "
"input positions at every evaluation. This means that one must store the "
"positions outside of the mesh, for example in a variable with the data "
"type :dfn:`Vec[]`. We encourage you to take a look at one of the "
"simulated Maya deformer samples to see how to build such graphs."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:54
msgid "Adding ports / attributes"
msgstr "ポートまたはアトリビュートの追加"

#: ../../source/DCCIntegrations/Maya/canvas.rst:56
msgid ""
"The CanvasNode inside of Maya doesn't come with any attributes by "
"default. It's so to say a generic node for any purpose. After opening up "
"the Canvas user interface you can expose ports the normal way. Doing that"
" will also add matching attributes to the Maya node, which allow you to "
"connect data between the two worlds. The supported data types are;"
msgstr "Maya内部のCanvasNodeは標準では何のアトリビュートも持ちません。そのため、任意の目的のための汎用的なノードといえるのです。Canvasユーザーインターフェースを開いた後で、あなたは通常の方法でポートを解放することができます。そうすることは、Mayaノードに対応するアトリビュートを加えることにもなります。それによって、あなたは２つの世界の間とデータをつなぐことができるのです。サポートされているデータ型は;"

#: ../../source/DCCIntegrations/Maya/canvas.rst:58
msgid "Boolean"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:59
msgid "Integer / SInt32 / UInt32"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:60
msgid "Scalar / Float32 / Float64"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:61
msgid "String"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:62
msgid "Vec3"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:63
msgid "Euler"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:64
msgid "Color"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:65
msgid "Mat44"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:66
msgid "Lines"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:67
msgid "PolygonMesh"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:69
msgid ""
"When using the dialog to create a port there are a couple of extra "
"features within Maya."
msgstr "ポートを作成するためのダイアログを使っているとき、Mayaにおいてはいくつかの拡張機能があります。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:74
msgid "Native vs. multi arrays"
msgstr "ネイティブ対マルチ配列(multi arrays)"

#: ../../source/DCCIntegrations/Maya/canvas.rst:76
msgid "Maya supports two types of arrays"
msgstr "Mayaは２つのタイプの配列をサポートしています。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:78
msgid ""
"Native: Maya has a way of representing a IntArray, DoubleArray or "
"VectorArray as a single attribute. This is very efficient for large "
"arrays and is much faster than using multi arrays."
msgstr ""
"ネイティブ：MayaはIntArray, DoubleArray, "
"またはVectorArrayを単一のアトリビュートとして表現する手段を持っています。これは大きな配列を扱う際は非常に効率的で、マルチ配列を使うよりもずっと高速です。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:79
msgid ""
"Multi: Each element of the array has its own single plug, you can connect"
" them to different things in the hyper graph and you can build up arrays "
"interactively. This is very flexible, but much slower than native arrays."
msgstr "マルチ：配列の各要素が各々の単一のプラグを持っています。あなたはそれらをハイパーグラフの異なるものに繋げることができ、配列を対話的に構築することができます。これはとても柔軟性がありますが、ネイティブ配列よりもずっと低速です。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:81
msgid ""
"Within Canvas you can choose which type of array you want - depending on "
"your needs."
msgstr "Canvas内部では、（あなたが何を必要とするかによりますが）あなたが望む型の配列を選ぶことができます。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:83
msgid ""
"Native arrays are only support for these types: :code:`Scalar[]`, "
":code:`Float32[]`, :code:`Integer[]`, :code:`SInt32[]`, :code:`Vec3[]`."
msgstr ""
"ネイティブ配列は次の型のみサポートしています： :code:`Scalar[]`、 :code:`Float32[]`、 "
":code:`Integer[]`、 :code:`SInt32[]`、 :code:`Vec3[]`。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:86
msgid "Opaque data"
msgstr "不透明なデータ"

#: ../../source/DCCIntegrations/Maya/canvas.rst:88
msgid ""
"By checking the :dfn:`opaque in DCC` checkbox causes Maya to use a "
"special data type for the Maya attribute instead of reflecting it as a "
"native type. These attributes can be connected between each other (from "
"one Maya node to the next) without Maya interpreting the data. This is "
"very useful when passing heavy data around which you don't need access to"
" outside of Canvas, but you still want to pass it between Maya nodes. "
"This is also very useful for passing data between Canvas Maya nodes which"
" Maya is not able to reflect at all (for example a custom KL "
"datastructure)."
msgstr ""
":dfn:`opaque in DCC` "
"チェックボックスをオンにすることにより、Mayaは特別なデータ型を、（ネイティブ型として表現することなく）Mayaアトリビュートとして使うことができるようになります。これらのアトリビュートはお互いに接続することができます（例えば、あるMayaノードから隣のMayaノードへ）。Mayaはその接続間のデータを解釈することはしません。これは、あなたがCanvasの外ではアクセスする必要を感じていないものの、しかしそのデータをMayaノード間で渡したいと思っている場合にとても便利です。また、これは、（例えばカスタムのKLデータ構造など）Mayaがまったく表現できないCanvas"
" Mayaノード間でデータを渡すためにも、とても便利なのです。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:91
msgid "Port metadata"
msgstr "ポートのメタデータ"

#: ../../source/DCCIntegrations/Maya/canvas.rst:93
msgid ""
"To drive some of the user interface features you can set metadata on the "
"port. This will be picked up by Maya when creating attribute. Open the "
"meta data section of the dialog when creating a port. Right now Maya "
"supports only the :dfn:`range` settings."
msgstr ""
"ユーザーインターフェース機能のいくつかを使うために、あなたはポートに対してメタデータを設定できます。このメタデータは、アトリビュートを作成するときに、Mayaによって取得されます。ポートを作成するときのダイアログのメタデータセクションを開いてください。現時点では、Mayaは"
" :dfn:`range` 設定のみサポートしています。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:98
msgid "Maya evaluation of Canvas graphs"
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:100
msgid ""
"One important aspect to mention is that a Canvas Node is a Maya "
"dependency graph node that is not connected to the Maya DAG. This means "
"that the Canvas graph is going to be evaluated **only** when there is an "
"output in the Canvas Node that is connected to the Maya DAG (i.e: a Vec3 "
"output port connected to the Translate of a locator)."
msgstr ""

#: ../../source/DCCIntegrations/Maya/canvas.rst:103
msgid "Loading / saving of Canvas graphs"
msgstr "Canvasグラフのロードとセーブ"

#: ../../source/DCCIntegrations/Maya/canvas.rst:105
msgid ""
"You can save out Canvas graphs from Maya to disk and also load them back."
" To do this select the Canvas Maya node of choice and pick :dfn:`Load "
"graph` or :dfn:`Save graph`."
msgstr ""
"あなたはCanvasグラフをMayaからディスクにセーブし、またそれらをロードし直すことができます。これをするためには、Canvas "
"Mayaノードを選択し、 :dfn:`Load graph` または :dfn:`Save graph` を実行します。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:107
msgid "You can only load graphs into a Canvas Maya node which is empty."
msgstr "あなたがグラフをロードできるのは、空のCanvas Mayaノードに対してだけです。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:110
msgid "Realtime Rendering"
msgstr "リアルタイムレンダリング"

#: ../../source/DCCIntegrations/Maya/canvas.rst:112
msgid ""
"You can draw into Maya's viewport directly from Canvas. For this you can "
"use the :dfn:`EmptyDrawingHandle` node and consecutive nodes such as "
":dfn:`DrawingHandle.DrawPolygonMesh`. Please see the "
":code:`InlineDrawing` Canvas sample scenes for examples of this."
msgstr ""
"あなたはCanvasから直接Mayaのビューポートに描画することができます。そのためには、 :dfn:`EmptyDrawingHandle` "
"と、それに連続させることのできる ―例え :dfn:`DrawingHandle.DrawPolygonMesh のような― "
"ノード群を使用します。これの例として、 :code:`InlineDrawing` Canvasサンプルシーンを見てください。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:116
msgid ""
"You need to provide a proper name (for the name port) for each of the "
"drawing nodes when using multiple nodes consecutively."
msgstr "複数のノードを連続して（カスケードして）使うときには、各描画ノードに対して、（ `name` ポートに）適切な名前を設定する必要があります。"

#: ../../source/DCCIntegrations/Maya/canvas.rst:119
msgid "Keyboard shortcuts"
msgstr "キーボードショートカット"

#: ../../source/DCCIntegrations/Maya/canvas.rst:121
msgid ""
"Canvas for Maya implements all standard :ref:`canvas-user-guide-"
"shortcuts`."
msgstr "Maya向けのCanvasでは、全ての標準的な :ref:`canvas-user-guide-shortcuts` を実装しています。"

#~ msgid "The CanvasNode"
#~ msgstr "CanvasNode"

#~ msgid ""
#~ msgstr ""

#~ msgid "Only vertex positions can be modified at this point."
#~ msgstr ""

